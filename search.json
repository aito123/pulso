[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Santiago Sotelo Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/introduccion.html","id":"funciones-de-pulso-pucp","dir":"Articles","previous_headings":"","what":"Funciones de Pulso PUCP","title":"Introduccion","text":"Este paquete fue creado por Santiago Sotelo.","code":""},{"path":"/articles/introduccion.html","id":"barra-simple","dir":"Articles","previous_headings":"","what":"Barra simple","title":"Introduccion","text":"","code":"# data_prueba %>%  #   barra_simple(gedad, ordenado=FALSE)"},{"path":"/articles/introduccion.html","id":"barra-multiple","dir":"Articles","previous_headings":"","what":"Barra multiple","title":"Introduccion","text":"","code":"# data_prueba %>%  #   filter(q0002 %in% 1) %>%  #   barra_multiple(starts_with(\"q0004_0\"))"},{"path":"/articles/introduccion.html","id":"barra-apilada","dir":"Articles","previous_headings":"","what":"Barra apilada","title":"Introduccion","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # data_prueba %>%  #   filter(q0002 %in% 1) %>%  #   barra_apilada_1(q0003_0002)"},{"path":"/articles/introduccion.html","id":"barra-apilada-n-se-descontinuara","dir":"Articles","previous_headings":"","what":"Barra apilada n (se descontinuara)","title":"Introduccion","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # data_prueba %>%  #   barra_apilada_n(starts_with(\"q0011_\"))"},{"path":"/articles/introduccion.html","id":"grafico-donut","dir":"Articles","previous_headings":"","what":"Grafico donut","title":"Introduccion","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # data_prueba %>%  #   grafico_donut(sexo)"},{"path":"/articles/introduccion.html","id":"grafico-pie","dir":"Articles","previous_headings":"","what":"Grafico pie","title":"Introduccion","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # data_prueba %>%  #   grafico_donut(sexo)"},{"path":"/articles/introduccion.html","id":"grafico-radar","dir":"Articles","previous_headings":"","what":"Grafico radar","title":"Introduccion","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # radar<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   sjlabelled::label_to_colnames() %>% #   pivot_longer(everything(), names_to = \"pregunta\", values_to = \"numero\") %>% #   mutate(nombres=sjlabelled::as_label(numero)) %>%  #   group_by(pregunta, numero, nombres) %>% #   dplyr::summarize(Freq = n()) %>%  #   group_by(pregunta) %>%  #   dplyr::mutate(prop = round_half_up(Freq/sum(Freq), digits = 2), #                 numero = as.character(numero), #                 nombres = as.character(nombres)) %>%  #   separate(pregunta, c(\"Servicio\",\"group\", NA),  sep=\" - \") %>%  #   filter(nombres!=\"No\") %>% #   select(-c(numero, nombres, Freq)) %>% #   group_by(group) %>%  #   pivot_wider(names_from = Servicio, values_from = prop) %>%  #   mutate( #    group=case_when( #     group %in% \"Conoce este servicio de bienestar que brinda la universidad\" ~ \"Lo conoce\", #     TRUE ~ group) #   ) %>%  #   ungroup() #  # radar.tag<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   nrow() #  # radar %>%  #   select(group, `Servicio de Salud`, `Servicio de actividad fisica y deportes`, `Bienestar psicologico`, `Servicios Culturales`) %>%  #   grafico_radar(polygonfill = FALSE, #          grid.label.size = 3, #          axis.label.size = 3, #          group.line.width = 1, #          fullscore = as.numeric(rep(1,ncol(.)-1)) #          ) +  #    #   labs(caption = \"Elaborado por Pulso PUCP\", #        tag = glue(\"N=\",radar.tag)) + #    #   theme(legend.title = element_blank(),legend.position = \"bottom\",legend.text = element_text(size=10, face = \"bold\",family=\"sans\"),legend.key.height = unit(.2, \"cm\"), #         plot.caption = element_text(face = \"italic\",family=\"sans\"),plot.margin = unit(c(0,0,1,0),\"cm\"),plot.tag = element_text(size = 8, color=\"grey40\"),plot.tag.position = \"bottomleft\", #          #         text = element_text(size = 9, color=\"#002060\",family=\"sans\"), #         ) + #   guides(color=guide_legend(nrow = 2, byrow = TRUE)) + #   coord_equal(clip=\"off\")"},{"path":"/articles/introduccion.html","id":"tablas-de-cruces","dir":"Articles","previous_headings":"","what":"Tablas de cruces","title":"Introduccion","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # radar<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   sjlabelled::label_to_colnames() %>% #   pivot_longer(everything(), names_to = \"pregunta\", values_to = \"numero\") %>% #   mutate(nombres=sjlabelled::as_label(numero)) %>%  #   group_by(pregunta, numero, nombres) %>% #   dplyr::summarize(Freq = n()) %>%  #   group_by(pregunta) %>%  #   dplyr::mutate(prop = round_half_up(Freq/sum(Freq), digits = 2), #                 numero = as.character(numero), #                 nombres = as.character(nombres)) %>%  #   separate(pregunta, c(\"Servicio\",\"group\", NA),  sep=\" - \") %>%  #   filter(nombres!=\"No\") %>% #   select(-c(numero, nombres, Freq)) %>% #   group_by(group) %>%  #   pivot_wider(names_from = Servicio, values_from = prop) %>%  #   mutate( #    group=case_when( #     group %in% \"Conoce este servicio de bienestar que brinda la universidad\" ~ \"Lo conoce\", #     TRUE ~ group) #   ) %>%  #   ungroup() #  # radar.tag<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   nrow() #  # radar %>%  #   select(group, `Servicio de Salud`, `Servicio de actividad fisica y deportes`, `Bienestar psicologico`, `Servicios Culturales`) %>%  #   grafico_radar(polygonfill = FALSE, #          grid.label.size = 3, #          axis.label.size = 3, #          group.line.width = 1, #          fullscore = as.numeric(rep(1,ncol(.)-1)) #          ) +  #    #   labs(caption = \"Elaborado por Pulso PUCP\", #        tag = glue(\"N=\",radar.tag)) + #    #   theme(legend.title = element_blank(),legend.position = \"bottom\",legend.text = element_text(size=10, face = \"bold\",family=\"sans\"),legend.key.height = unit(.2, \"cm\"), #         plot.caption = element_text(face = \"italic\",family=\"sans\"),plot.margin = unit(c(0,0,1,0),\"cm\"),plot.tag = element_text(size = 8, color=\"grey40\"),plot.tag.position = \"bottomleft\", #          #         text = element_text(size = 9, color=\"#002060\",family=\"sans\"), #         ) + #   guides(color=guide_legend(nrow = 2, byrow = TRUE)) + #   coord_equal(clip=\"off\")"},{"path":"/articles/introduccion.html","id":"salto","dir":"Articles","previous_headings":"","what":"Salto","title":"Introduccion","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # radar<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   sjlabelled::label_to_colnames() %>% #   pivot_longer(everything(), names_to = \"pregunta\", values_to = \"numero\") %>% #   mutate(nombres=sjlabelled::as_label(numero)) %>%  #   group_by(pregunta, numero, nombres) %>% #   dplyr::summarize(Freq = n()) %>%  #   group_by(pregunta) %>%  #   dplyr::mutate(prop = round_half_up(Freq/sum(Freq), digits = 2), #                 numero = as.character(numero), #                 nombres = as.character(nombres)) %>%  #   separate(pregunta, c(\"Servicio\",\"group\", NA),  sep=\" - \") %>%  #   filter(nombres!=\"No\") %>% #   select(-c(numero, nombres, Freq)) %>% #   group_by(group) %>%  #   pivot_wider(names_from = Servicio, values_from = prop) %>%  #   mutate( #    group=case_when( #     group %in% \"Conoce este servicio de bienestar que brinda la universidad\" ~ \"Lo conoce\", #     TRUE ~ group) #   ) %>%  #   ungroup() #  # radar.tag<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   nrow() #  # radar %>%  #   select(group, `Servicio de Salud`, `Servicio de actividad fisica y deportes`, `Bienestar psicologico`, `Servicios Culturales`) %>%  #   grafico_radar(polygonfill = FALSE, #          grid.label.size = 3, #          axis.label.size = 3, #          group.line.width = 1, #          fullscore = as.numeric(rep(1,ncol(.)-1)) #          ) +  #    #   labs(caption = \"Elaborado por Pulso PUCP\", #        tag = glue(\"N=\",radar.tag)) + #    #   theme(legend.title = element_blank(),legend.position = \"bottom\",legend.text = element_text(size=10, face = \"bold\",family=\"sans\"),legend.key.height = unit(.2, \"cm\"), #         plot.caption = element_text(face = \"italic\",family=\"sans\"),plot.margin = unit(c(0,0,1,0),\"cm\"),plot.tag = element_text(size = 8, color=\"grey40\"),plot.tag.position = \"bottomleft\", #          #         text = element_text(size = 9, color=\"#002060\",family=\"sans\"), #         ) + #   guides(color=guide_legend(nrow = 2, byrow = TRUE)) + #   coord_equal(clip=\"off\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Santiago Sotelo. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sotelo S (2022). pulso: Funciones Para Los Informes Pulso PUCP. R package version 0.0.0.9000.","code":"@Manual{,   title = {pulso: Funciones Para Los Informes Pulso PUCP},   author = {Santiago Sotelo},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"pulso","dir":"","previous_headings":"","what":"Funciones Para Los Informes Pulso PUCP","title":"Funciones Para Los Informes Pulso PUCP","text":"El objetivo del paquete pulso es estandarizar los gráficos utilizados en los informes considerando un criterio estético y funcional.","code":""},{"path":"/index.html","id":"instalación","dir":"","previous_headings":"","what":"Instalación","title":"Funciones Para Los Informes Pulso PUCP","text":"Puede instalar la versión en desarrollo del paquete pulso en GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"aito123/pulso\")"},{"path":"/reference/barra_apilada.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada","title":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada","text":"Funcion para realizar un grafico de barra apilada de 1 variable.","code":""},{"path":"/reference/barra_apilada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada","text":"","code":"barra_apilada(   data,   ...,   filtrar = TRUE,   ordenado = TRUE,   porcentaje = TRUE,   ext.label = 42,   base.posicion = 0.35 )"},{"path":"/reference/barra_apilada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada","text":"data Base de datos para la funcion var Variable para el grafico de barra apilada","code":""},{"path":"/reference/barra_apilada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada","text":"Un grafico de barra apilado","code":""},{"path":"/reference/barra_apilada.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # data_prueba %>%  #   filter(q0002 %in% 1) %>%  #   barra_apilada_1(q0003_0002)"},{"path":"/reference/barra_apilada_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada_1","title":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada_1","text":"Funcion para realizar un grafico de barra apilada de 1 variable.","code":""},{"path":"/reference/barra_apilada_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada_1","text":"","code":"barra_apilada_1(data, var)"},{"path":"/reference/barra_apilada_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada_1","text":"data Base de datos para la funcion var Variable para el grafico de barra apilada","code":""},{"path":"/reference/barra_apilada_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada_1","text":"Un grafico de barra apilado","code":""},{"path":"/reference/barra_apilada_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para realizar un grafico de barra apilada de 1 variable. — barra_apilada_1","text":"","code":"data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") data_prueba <- haven::read_sav(data_prueba_ruta)  data_prueba %>%    filter(q0002 %in% 1) %>%    barra_apilada_1(q0003_0002) #> Error in q0002 %in% 1: object 'q0002' not found"},{"path":"/reference/barra_apilada_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para realizar un grafico de barra apilada de n variables. — barra_apilada_n","title":"Funcion para realizar un grafico de barra apilada de n variables. — barra_apilada_n","text":"Funcion para realizar un grafico de barra apilada de n variables.","code":""},{"path":"/reference/barra_apilada_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para realizar un grafico de barra apilada de n variables. — barra_apilada_n","text":"","code":"barra_apilada_n(data, ..., ordenado = TRUE)"},{"path":"/reference/barra_apilada_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para realizar un grafico de barra apilada de n variables. — barra_apilada_n","text":"data Base de datos para la funcion ... Variables para el grafico de barra apilada","code":""},{"path":"/reference/barra_apilada_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para realizar un grafico de barra apilada de n variables. — barra_apilada_n","text":"Un grafico de barras apiladas","code":""},{"path":"/reference/barra_apilada_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para realizar un grafico de barra apilada de n variables. — barra_apilada_n","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # data_prueba %>%  #   barra_apilada_n(starts_with(\"q0011_\"))"},{"path":"/reference/barra_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para realizar un grafico de barras multiple — barra_multiple","title":"Funcion para realizar un grafico de barras multiple — barra_multiple","text":"Funcion para realizar un grafico de barras multiple","code":""},{"path":"/reference/barra_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para realizar un grafico de barras multiple — barra_multiple","text":"","code":"barra_multiple(   data,   ...,   filtrar = TRUE,   abierta = FALSE,   frecuencia = FALSE,   porcentaje = TRUE,   ultimo = NULL,   max.limit = 1,   color = \"#B0D597\",   ext.label = 30 )"},{"path":"/reference/barra_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para realizar un grafico de barras multiple — barra_multiple","text":"data Base de datos para la funcion ... Variables para el grafico de barras multiple filtrar Por default TRUE que significa ningún filtro, si se quiere filtrar por una variable especificar la variable y el valor filtrar (ej: filtrar = q0002 == 1 que significa filtrar la base para que aparezcan solo los casos que tienen en la pregunta q0002 el valor de 1). abierta Por default abierta es FALSE, es necesario cambiarla TRUE cuando se trabaja con una pregunta abierta lo cual tendra un impacto en las etiquetas. frecuencia Por default es FALSE, cambiar TRUE para visualizar los resultados en frecuencias y en porcentajes. porcentaje Por default es TRUE, cambiar FALSE para visualizar los resultados de porcentajes sin el simbolo %. ultimo Por default es NULL, escribir entre comillas la palabra que quieres que vaya al final de las barras (ej: ultimo=\"Otros\") max.limit Por default es 1, es el limite máximo del eje x. 1=100 cuando son resultados en porcentajes (ej: max.limit=0.75 significa maximo 75%). Aunque el porcentaje esté en FALSE, el max.limit debe ser tratado como si 1.00 fuera el maximo y como si 100 fuera el maximo. color Por default es color azul que es \"#B0D597\" en notacion hexagesimal. Buscar colores hex para más información. También permite colores grabados en R como \"red\". ext.label Por default es 30, menor el número menor espacio para el texto de las etiquetas.","code":""},{"path":"/reference/barra_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para realizar un grafico de barras multiple — barra_multiple","text":"Un grafico de barras múltiple","code":""},{"path":"/reference/barra_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para realizar un grafico de barras multiple — barra_multiple","text":"","code":"# data_prueba %>%  #   filter(q0002 %in% 1) %>%  #   barra_multiple(starts_with(\"q0004_0\"))"},{"path":"/reference/barra_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para realizar un grafico de barras simple. — barra_simple","title":"Funcion para realizar un grafico de barras simple. — barra_simple","text":"Funcion para realizar un grafico de barras simple.","code":""},{"path":"/reference/barra_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para realizar un grafico de barras simple. — barra_simple","text":"","code":"barra_simple(   data,   var,   filtrar = TRUE,   ordenado = TRUE,   frecuencia = FALSE,   porcentaje = TRUE,   ultimo = NULL,   max.limit = 1,   color = \"#B0D597\",   ext.label = 30 )"},{"path":"/reference/barra_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para realizar un grafico de barras simple. — barra_simple","text":"data Base de datos para la funcion var Variable para el grafico de barras simple filtrar Por default TRUE que significa ningún filtro, si se quiere filtrar por una variable especificar la variable y el valor filtrar (ej: filtrar = q0002 == 1 que significa filtrar la base para que aparezcan solo los casos que tienen en la pregunta q0002 el valor de 1). ordenado Por default es TRUE, significa que ordena las barras de menor mayor, cambiar FALSE para dejarlas en el orden original. frecuencia Por default es FALSE, cambiar TRUE para visualizar los resultados en frecuencias y en porcentajes. porcentaje Por default es TRUE, cambiar FALSE para visualizar los resultados de porcentajes sin el simbolo %. ultimo Por default es NULL, escribir entre comillas la palabra que quieres que vaya al final de las barras (ej: ultimo=\"Otros\") max.limit Por default es 1, es el limite máximo del eje x. 1=100 cuando son resultados en porcentajes (ej: max.limit=0.75 significa maximo 75%). Aunque el porcentaje esté en FALSE, el max.limit debe ser tratado como si 1.00 fuera el maximo y como si 100 fuera el maximo. color Por default es color azul que es \"#B0D597\" en notacion hexagesimal. Buscar colores hex para más información. También permite colores grabados en R como \"red\". ext.label Por default es 30, menor el número menor espacio para el texto de las etiquetas.","code":""},{"path":"/reference/barra_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para realizar un grafico de barras simple. — barra_simple","text":"Un grafico de barras simple.","code":""},{"path":"/reference/barra_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para realizar un grafico de barras simple. — barra_simple","text":"","code":"# data_prueba %>%  #   barra_simple(gedad, ordenado=FALSE)"},{"path":"/reference/grafico_donut.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para realizar un grafico donut. — grafico_donut","title":"Funcion para realizar un grafico donut. — grafico_donut","text":"Funcion para realizar un grafico donut.","code":""},{"path":"/reference/grafico_donut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para realizar un grafico donut. — grafico_donut","text":"","code":"grafico_donut(data, var, paleta = 1, direction = 1)"},{"path":"/reference/grafico_donut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para realizar un grafico donut. — grafico_donut","text":"data Base de datos para la funcion var Variable para gráfico donut","code":""},{"path":"/reference/grafico_donut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para realizar un grafico donut. — grafico_donut","text":"Un grafico donut","code":""},{"path":"/reference/grafico_donut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para realizar un grafico donut. — grafico_donut","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # data_prueba %>%  #   grafico_donut(sexo)"},{"path":"/reference/grafico_pie.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para realizar un grafico pie — grafico_pie","title":"Funcion para realizar un grafico pie — grafico_pie","text":"Funcion para realizar un grafico pie","code":""},{"path":"/reference/grafico_pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para realizar un grafico pie — grafico_pie","text":"","code":"grafico_pie(data, var, filtrar = TRUE, color1 = \"#A9D18E\", color2 = \"#FF9393\")"},{"path":"/reference/grafico_pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para realizar un grafico pie — grafico_pie","text":"data Base de datos para la funcion var Variable para gráfico pie","code":""},{"path":"/reference/grafico_pie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para realizar un grafico pie — grafico_pie","text":"Un grafico pie","code":""},{"path":"/reference/grafico_pie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para realizar un grafico pie — grafico_pie","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # data_prueba %>%  #   grafico_donut(sexo)"},{"path":"/reference/grafico_radar.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para realizar un grafico radar — grafico_radar","title":"Funcion para realizar un grafico radar — grafico_radar","text":"Funcion para realizar un grafico radar","code":""},{"path":"/reference/grafico_radar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para realizar un grafico radar — grafico_radar","text":"","code":"grafico_radar(   plot.data,   base.size = 20,   webtype = \"mini\",   axis.labels = \"\",   grid.min = 0,   grid.max = 1,   centre.y = grid.min - ((1/9) * (grid.max - grid.min)),   label.centre.y = FALSE,   grid.line.width = 0.5,   grid.line.trend = \"classic\",   gridline.min.linetype = \"longdash\",   gridline.mid.linetype = \"longdash\",   gridline.max.linetype = \"longdash\",   gridline.min.colour = \"grey\",   gridline.mid.colour = \"#007A87\",   gridline.max.colour = \"grey\",   grid.label.size = 6,   gridline.label.offset = -0.1 * (grid.max - centre.y),   label.gridline.min = TRUE,   label.gridline.mid = TRUE,   label.gridline.max = TRUE,   gridline.label = NULL,   axis.label.offset = 1.15,   axis.label.size = 5,   axis.line.colour = \"grey\",   group.line.width = 1.5,   group.point.size = 3,   group.colours = NULL,   group.fill.colours = NULL,   background.circle.colour = \"#D7D6D1\",   background.circle.transparency = 0.2,   legend.title = \"\",   plot.legend = TRUE,   plot.title = \"\",   legend.text.size = 14,   radarshape = \"round\",   polygonfill = TRUE,   polygonfill.transparency = 0.2,   multiplots = FALSE,   stripbackground = TRUE,   fullscore = NULL )"},{"path":"/reference/grafico_radar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para realizar un grafico radar — grafico_radar","text":"data Base de datos para la funcion","code":""},{"path":"/reference/grafico_radar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para realizar un grafico radar — grafico_radar","text":"Un grafico radar","code":""},{"path":"/reference/grafico_radar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para realizar un grafico radar — grafico_radar","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # radar<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   sjlabelled::label_to_colnames() %>% #   pivot_longer(everything(), names_to = \"pregunta\", values_to = \"numero\") %>% #   mutate(nombres=sjlabelled::as_label(numero)) %>%  #   group_by(pregunta, numero, nombres) %>% #   dplyr::summarize(Freq = n()) %>%  #   group_by(pregunta) %>%  #   dplyr::mutate(prop = round_half_up(Freq/sum(Freq), digits = 2), #                 numero = as.character(numero), #                 nombres = as.character(nombres)) %>%  #   separate(pregunta, c(\"Servicio\",\"group\", NA),  sep=\" - \") %>%  #   filter(nombres!=\"No\") %>% #   select(-c(numero, nombres, Freq)) %>% #   group_by(group) %>%  #   pivot_wider(names_from = Servicio, values_from = prop) %>%  #   mutate( #    group=case_when( #     group %in% \"Conoce este servicio de bienestar que brinda la universidad\" ~ \"Lo conoce\", #     TRUE ~ group) #   ) %>%  #   ungroup() #  # radar.tag<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   nrow() #  # radar %>%  #   select(group, `Servicio de Salud`, `Servicio de actividad fisica y deportes`, `Bienestar psicologico`, `Servicios Culturales`) %>%  #   grafico_radar(polygonfill = FALSE, #          grid.label.size = 3, #          axis.label.size = 3, #          group.line.width = 1, #          fullscore = as.numeric(rep(1,ncol(.)-1)) #          ) +  #    #   labs(caption = \"Elaborado por Pulso PUCP\", #        tag = glue(\"N=\",radar.tag)) + #    #   theme(legend.title = element_blank(),legend.position = \"bottom\",legend.text = element_text(size=10, face = \"bold\",family=\"sans\"),legend.key.height = unit(.2, \"cm\"), #         plot.caption = element_text(face = \"italic\",family=\"sans\"),plot.margin = unit(c(0,0,1,0),\"cm\"),plot.tag = element_text(size = 8, color=\"grey40\"),plot.tag.position = \"bottomleft\", #          #         text = element_text(size = 9, color=\"#002060\",family=\"sans\"), #         ) + #   guides(color=guide_legend(nrow = 2, byrow = TRUE)) + #   coord_equal(clip=\"off\")"},{"path":"/reference/grafico_radar2.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para realizar un grafico radar — grafico_radar2","title":"Funcion para realizar un grafico radar — grafico_radar2","text":"Funcion para realizar un grafico radar","code":""},{"path":"/reference/grafico_radar2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para realizar un grafico radar — grafico_radar2","text":"","code":"grafico_radar2(   data,   ...,   order = everything(),   base.size = 20,   webtype = \"mini\",   axis.labels = \"\",   grid.min = 0,   grid.max = 1,   centre.y = grid.min - ((1/9) * (grid.max - grid.min)),   label.centre.y = FALSE,   grid.line.width = 0.5,   grid.line.trend = \"classic\",   gridline.min.linetype = \"longdash\",   gridline.mid.linetype = \"longdash\",   gridline.max.linetype = \"longdash\",   gridline.min.colour = \"grey\",   gridline.mid.colour = \"#007A87\",   gridline.max.colour = \"grey\",   grid.label.size = 3,   gridline.label.offset = -0.1 * (grid.max - centre.y),   label.gridline.min = TRUE,   label.gridline.mid = TRUE,   label.gridline.max = TRUE,   gridline.label = NULL,   axis.label.offset = 1.15,   axis.label.size = 3,   axis.line.colour = \"grey\",   group.line.width = 1,   group.point.size = 3,   group.colours = NULL,   group.fill.colours = NULL,   background.circle.colour = \"#D7D6D1\",   background.circle.transparency = 0.2,   legend.title = \"\",   plot.legend = TRUE,   plot.title = \"\",   legend.text.size = 14,   radarshape = \"round\",   polygonfill = FALSE,   polygonfill.transparency = 0.2,   multiplots = FALSE,   stripbackground = TRUE,   fullscore = fullscore )"},{"path":"/reference/grafico_radar2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para realizar un grafico radar — grafico_radar2","text":"data Base de datos para la funcion","code":""},{"path":"/reference/grafico_radar2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para realizar un grafico radar — grafico_radar2","text":"Un grafico radar","code":""},{"path":"/reference/grafico_radar2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para realizar un grafico radar — grafico_radar2","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # radar<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   sjlabelled::label_to_colnames() %>% #   pivot_longer(everything(), names_to = \"pregunta\", values_to = \"numero\") %>% #   mutate(nombres=sjlabelled::as_label(numero)) %>%  #   group_by(pregunta, numero, nombres) %>% #   dplyr::summarize(Freq = n()) %>%  #   group_by(pregunta) %>%  #   dplyr::mutate(prop = round_half_up(Freq/sum(Freq), digits = 2), #                 numero = as.character(numero), #                 nombres = as.character(nombres)) %>%  #   separate(pregunta, c(\"Servicio\",\"group\", NA),  sep=\" - \") %>%  #   filter(nombres!=\"No\") %>% #   select(-c(numero, nombres, Freq)) %>% #   group_by(group) %>%  #   pivot_wider(names_from = Servicio, values_from = prop) %>%  #   mutate( #    group=case_when( #     group %in% \"Conoce este servicio de bienestar que brinda la universidad\" ~ \"Lo conoce\", #     TRUE ~ group) #   ) %>%  #   ungroup() #  # radar.tag<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   nrow() #  # radar %>%  #   select(group, `Servicio de Salud`, `Servicio de actividad fisica y deportes`, `Bienestar psicologico`, `Servicios Culturales`) %>%  #   grafico_radar(polygonfill = FALSE, #          grid.label.size = 3, #          axis.label.size = 3, #          group.line.width = 1, #          fullscore = as.numeric(rep(1,ncol(.)-1)) #          ) +  #    #   labs(caption = \"Elaborado por Pulso PUCP\", #        tag = glue(\"N=\",radar.tag)) + #    #   theme(legend.title = element_blank(),legend.position = \"bottom\",legend.text = element_text(size=10, face = \"bold\",family=\"sans\"),legend.key.height = unit(.2, \"cm\"), #         plot.caption = element_text(face = \"italic\",family=\"sans\"),plot.margin = unit(c(0,0,1,0),\"cm\"),plot.tag = element_text(size = 8, color=\"grey40\"),plot.tag.position = \"bottomleft\", #          #         text = element_text(size = 9, color=\"#002060\",family=\"sans\"), #         ) + #   guides(color=guide_legend(nrow = 2, byrow = TRUE)) + #   coord_equal(clip=\"off\")"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/pulso-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pulso: Funciones Para Los Informes Pulso PUCP — pulso-package","title":"pulso: Funciones Para Los Informes Pulso PUCP — pulso-package","text":"Conjunto de funciones para los informes de Pulso PUCP.","code":""},{"path":"/reference/pulso-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pulso: Funciones Para Los Informes Pulso PUCP — pulso-package","text":"Maintainer: Santiago Sotelo santiago.sotelo@pucp.edu.pe (ORCID)","code":""},{"path":"/reference/salto.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para insertar un salto de pagina luego de cada tabla. Necesario para que las tablas no se peguen. — salto","title":"Funcion para insertar un salto de pagina luego de cada tabla. Necesario para que las tablas no se peguen. — salto","text":"Funcion para insertar un salto de pagina luego de cada tabla. Necesario para que las tablas se peguen.","code":""},{"path":"/reference/salto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para insertar un salto de pagina luego de cada tabla. Necesario para que las tablas no se peguen. — salto","text":"","code":"salto()"},{"path":"/reference/salto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para insertar un salto de pagina luego de cada tabla. Necesario para que las tablas no se peguen. — salto","text":"Un grafico radar","code":""},{"path":"/reference/salto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para insertar un salto de pagina luego de cada tabla. Necesario para que las tablas no se peguen. — salto","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # radar<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   sjlabelled::label_to_colnames() %>% #   pivot_longer(everything(), names_to = \"pregunta\", values_to = \"numero\") %>% #   mutate(nombres=sjlabelled::as_label(numero)) %>%  #   group_by(pregunta, numero, nombres) %>% #   dplyr::summarize(Freq = n()) %>%  #   group_by(pregunta) %>%  #   dplyr::mutate(prop = round_half_up(Freq/sum(Freq), digits = 2), #                 numero = as.character(numero), #                 nombres = as.character(nombres)) %>%  #   separate(pregunta, c(\"Servicio\",\"group\", NA),  sep=\" - \") %>%  #   filter(nombres!=\"No\") %>% #   select(-c(numero, nombres, Freq)) %>% #   group_by(group) %>%  #   pivot_wider(names_from = Servicio, values_from = prop) %>%  #   mutate( #    group=case_when( #     group %in% \"Conoce este servicio de bienestar que brinda la universidad\" ~ \"Lo conoce\", #     TRUE ~ group) #   ) %>%  #   ungroup() #  # radar.tag<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   nrow() #  # radar %>%  #   select(group, `Servicio de Salud`, `Servicio de actividad fisica y deportes`, `Bienestar psicologico`, `Servicios Culturales`) %>%  #   grafico_radar(polygonfill = FALSE, #          grid.label.size = 3, #          axis.label.size = 3, #          group.line.width = 1, #          fullscore = as.numeric(rep(1,ncol(.)-1)) #          ) +  #    #   labs(caption = \"Elaborado por Pulso PUCP\", #        tag = glue(\"N=\",radar.tag)) + #    #   theme(legend.title = element_blank(),legend.position = \"bottom\",legend.text = element_text(size=10, face = \"bold\",family=\"sans\"),legend.key.height = unit(.2, \"cm\"), #         plot.caption = element_text(face = \"italic\",family=\"sans\"),plot.margin = unit(c(0,0,1,0),\"cm\"),plot.tag = element_text(size = 8, color=\"grey40\"),plot.tag.position = \"bottomleft\", #          #         text = element_text(size = 9, color=\"#002060\",family=\"sans\"), #         ) + #   guides(color=guide_legend(nrow = 2, byrow = TRUE)) + #   coord_equal(clip=\"off\")"},{"path":"/reference/tabla_pulso.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para realizar tablas de cruces — tabla_pulso","title":"Funcion para realizar tablas de cruces — tabla_pulso","text":"Funcion para realizar tablas de cruces","code":""},{"path":"/reference/tabla_pulso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para realizar tablas de cruces — tabla_pulso","text":"","code":"tabla_pulso(data, main_var = NULL, sub_var = NULL, titulo = titulo1)"},{"path":"/reference/tabla_pulso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para realizar tablas de cruces — tabla_pulso","text":"data Base de datos para la funcion main_var Variable principal que estara en las filas. sub_var Variables de cruces. titulo Es el titulo de la tabla, por default recoge la pregunta como aparece en la encuesta pero se puede modificar.","code":""},{"path":"/reference/tabla_pulso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para realizar tablas de cruces — tabla_pulso","text":"Una tabla.","code":""},{"path":"/reference/tabla_pulso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para realizar tablas de cruces — tabla_pulso","text":"","code":"# data_prueba_ruta <- system.file(\"data_prueba.sav\", package = \"pulso\") # data_prueba <- haven::read_sav(data_prueba_ruta) #  # radar<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   sjlabelled::label_to_colnames() %>% #   pivot_longer(everything(), names_to = \"pregunta\", values_to = \"numero\") %>% #   mutate(nombres=sjlabelled::as_label(numero)) %>%  #   group_by(pregunta, numero, nombres) %>% #   dplyr::summarize(Freq = n()) %>%  #   group_by(pregunta) %>%  #   dplyr::mutate(prop = round_half_up(Freq/sum(Freq), digits = 2), #                 numero = as.character(numero), #                 nombres = as.character(nombres)) %>%  #   separate(pregunta, c(\"Servicio\",\"group\", NA),  sep=\" - \") %>%  #   filter(nombres!=\"No\") %>% #   select(-c(numero, nombres, Freq)) %>% #   group_by(group) %>%  #   pivot_wider(names_from = Servicio, values_from = prop) %>%  #   mutate( #    group=case_when( #     group %in% \"Conoce este servicio de bienestar que brinda la universidad\" ~ \"Lo conoce\", #     TRUE ~ group) #   ) %>%  #   ungroup() #  # radar.tag<- #   data_prueba %>%  #   select(starts_with(\"q0008_\")) %>%  #   nrow() #  # radar %>%  #   select(group, `Servicio de Salud`, `Servicio de actividad fisica y deportes`, `Bienestar psicologico`, `Servicios Culturales`) %>%  #   grafico_radar(polygonfill = FALSE, #          grid.label.size = 3, #          axis.label.size = 3, #          group.line.width = 1, #          fullscore = as.numeric(rep(1,ncol(.)-1)) #          ) +  #    #   labs(caption = \"Elaborado por Pulso PUCP\", #        tag = glue(\"N=\",radar.tag)) + #    #   theme(legend.title = element_blank(),legend.position = \"bottom\",legend.text = element_text(size=10, face = \"bold\",family=\"sans\"),legend.key.height = unit(.2, \"cm\"), #         plot.caption = element_text(face = \"italic\",family=\"sans\"),plot.margin = unit(c(0,0,1,0),\"cm\"),plot.tag = element_text(size = 8, color=\"grey40\"),plot.tag.position = \"bottomleft\", #          #         text = element_text(size = 9, color=\"#002060\",family=\"sans\"), #         ) + #   guides(color=guide_legend(nrow = 2, byrow = TRUE)) + #   coord_equal(clip=\"off\")"}]
